"""
–¢–µ—Å—Ç—ã –¥–ª—è API

–°–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ—Å—Ç—ã –¥–ª—è –≤—Å–µ—Ö endpoints API.
"""
import requests
import json

BASE_URL = "http://localhost:44445"

def test_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ endpoints API"""
    
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Tickets Booking API")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API...")
    try:
        response = requests.get(f"{BASE_URL}/")
        if response.status_code == 200:
            print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω")
            print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
        else:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            return
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω.")
        return
    
    # –¢–µ—Å—Ç 2: –õ–æ–≥–∏–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–Ω–∞...")
    login_data = {
        "email": "kate@mail.ru",
        "password": "1111"
    }
    
    try:
        response = requests.post(f"{BASE_URL}/auth/login", json=login_data)
        if response.status_code == 200:
            print("‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω")
            user_data = response.json()
            token = user_data.get("token")
            if token:
                print(f"   –ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω: {token[:20]}...")
            else:
                print("   –¢–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω")
                return
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏–Ω–µ: {e}")
        return
    
    # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è...")
    headers = {"Authorization": f"Bearer {token}"}
    
    try:
        response = requests.get(f"{BASE_URL}/auth/me", headers=headers)
        if response.status_code == 200:
            print("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {response.json()['full_name']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è: {e}")
    
    # –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤
    print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤...")
    try:
        response = requests.get(f"{BASE_URL}/posts/")
        if response.status_code == 200:
            posts = response.json()
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(posts)} –ø–æ—Å—Ç–æ–≤")
            if posts:
                print(f"   –ü–µ—Ä–≤—ã–π –ø–æ—Å—Ç: {posts[0]['title']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å—Ç–æ–≤: {e}")
    
    # –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–≥–æ–≤
    print("\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–≥–æ–≤...")
    try:
        response = requests.get(f"{BASE_URL}/posts/tags/")
        if response.status_code == 200:
            tags = response.json()
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(tags)} —Ç–µ–≥–æ–≤")
            if tags:
                print(f"   –¢–µ–≥–∏: {', '.join(tags[:5])}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–≥–æ–≤: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–≥–æ–≤: {e}")
    
    # –¢–µ—Å—Ç 6: –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–ª–µ—Ç–∞
    print("\n6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –±–∏–ª–µ—Ç–∞...")
    try:
        response = requests.get(f"{BASE_URL}/posts/")
        if response.status_code == 200:
            posts = response.json()
            if posts:
                post_id = posts[0]['post_id']
                booking_data = {"post_id": post_id}
                
                response = requests.post(f"{BASE_URL}/posts/", json=booking_data, headers=headers)
                if response.status_code == 200:
                    print("‚úÖ –ë–∏–ª–µ—Ç –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
                    print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
                elif response.status_code == 400:
                    print("‚ö†Ô∏è  –ë–∏–ª–µ—Ç —É–∂–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {response.status_code}")
                    print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            else:
                print("‚ö†Ô∏è  –ù–µ—Ç –ø–æ—Å—Ç–æ–≤ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    
    # –¢–µ—Å—Ç 7: –ü–æ–ª—É—á–µ–Ω–∏–µ –º–æ–∏—Ö –±–∏–ª–µ—Ç–æ–≤
    print("\n7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–∏—Ö –±–∏–ª–µ—Ç–æ–≤...")
    try:
        response = requests.get(f"{BASE_URL}/posts/my-tickets/", headers=headers)
        if response.status_code == 200:
            tickets = response.json()
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(tickets)} –±–∏–ª–µ—Ç–æ–≤")
            if tickets:
                print(f"   –ü–µ—Ä–≤—ã–π –±–∏–ª–µ—Ç: {tickets[0]['title']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∏–ª–µ—Ç–æ–≤: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∏–ª–µ—Ç–æ–≤: {e}")
    
    print("\n" + "=" * 50)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\n–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –æ—Ç–∫—Ä–æ–π—Ç–µ:")
    print(f"üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: {BASE_URL}/docs")
    print(f"üîß ReDoc: {BASE_URL}/redoc")

if __name__ == "__main__":
    test_api()
